version: 1
# config:
#   type: object
#   description: Full-featured test schema for make87 config validation
#   required: ["username", "password", "features", "mode"]
#   properties:
#     username:
#       type: string
#       minLength: 3
#       pattern: "^[a-zA-Z0-9_]+$"
#       description: User's login name
#     password:
#       type: string
#       minLength: 8
#       description: Can also be passed via secret
#       examples: ["{{ secrets.USER_PASSWORD }}"]
#     retry_count:
#       type: integer
#       minimum: 0
#       maximum: 10
#       default: 3
#     timeout_seconds:
#       type: number
#       exclusiveMinimum: 0
#       default: 5.0
#     enabled:
#       type: boolean
#       default: true
#     start_date:
#       type: string
#       format: date
#     api_url:
#       type: string
#       format: uri
#     ip_whitelist:
#       type: array
#       items:
#         type: string
#         format: ipv4
#       uniqueItems: true
#       default: []
#     features:
#       type: object
#       required: ["core"]
#       properties:
#         core:
#           type: boolean
#         advanced:
#           type: boolean
#         experimental:
#           type: boolean
#           default: false
#     mode:
#       type: string
#       enum: ["basic", "advanced", "expert"]
#     options:
#       oneOf:
#         - type: object
#           required: ["type"]
#           properties:
#             type:
#               const: "file"
#             path:
#               type: string
#         - type: object
#           required: ["type"]
#           properties:
#             type:
#               const: "url"
#             link:
#               type: string
#               format: uri
#     credentials:
#       type: object
#       properties:
#         client_id:
#           type: string
#         client_secret:
#           type: string
#           examples: ["{{ secrets.CLIENT_SECRET }}"]
#     nested_array:
#       type: array
#       minItems: 1
#       items:
#         type: object
#         required: ["id"]
#         properties:
#           id:
#             type: integer
#           tags:
#             type: array
#             items:
#               type: string
#     toggle_feature:
#       type: boolean
#     feature_config:
#       type: object
#       properties:
#         level:
#           type: string
#           enum: ["low", "medium", "high"]
#     # Conditional logic
#   allOf:
#     - if:
#         properties:
#           toggle_feature:
#             const: true
#       then:
#         required: ["feature_config"]
#       else:
#         not:
#           required: ["feature_config"]
build:
  custom:
    dockerfile: ../build_kit/python.Dockerfile
    context: ./python
variants:
  # python:
  #   build:
  #     build_kit:
  #       name: python3
  #       context: ./python
  rust:
    build:
      custom:
        dockerfile: ../build_kit/rust.Dockerfile
        context: ./rust
